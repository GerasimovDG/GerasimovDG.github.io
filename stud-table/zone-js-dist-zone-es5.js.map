{"version":3,"sources":["zone-js-dist-zone-es5.js","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"zone-js-dist-zone\"],{\n\n/***/ \"./node_modules/zone.js/dist/zone-evergreen.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/zone.js/dist/zone-evergreen.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n     true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) :\n    undefined;\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=zone-js-dist-zone-es2015.js.map","/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n"]}